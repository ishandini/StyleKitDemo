//
//  AmazingStyleKit.m
//  Amazing
//
//  Created by Ishan Weerasooriya on 10/29/15.
//  Copyright (c) 2015 Appmonkeyz. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "AmazingStyleKit.h"


@implementation AmazingStyleKit

#pragma mark Cache

static UIImage* _imageOfMessageRectangle = nil;

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawMessageRectangle
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0.303 green: 0.502 blue: 0.622 alpha: 1];

    //// Shadow Declarations
    UIColor* shadow = [UIColor.blackColor colorWithAlphaComponent: 0.48];
    CGSize shadowOffset = CGSizeMake(0.1, 6.1);
    CGFloat shadowBlurRadius = 6;

    //// Rectangle Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 10.47, 15.55);
    CGContextRotateCTM(context, -0.02 * M_PI / 180);

    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(0, 0, 266.96, 305) cornerRadius: 5];
    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, shadowOffset, shadowBlurRadius, [shadow CGColor]);
    [color setFill];
    [rectanglePath fill];
    CGContextRestoreGState(context);

    [UIColor.whiteColor setStroke];
    rectanglePath.lineWidth = 1;
    [rectanglePath stroke];

    CGContextRestoreGState(context);


    //// Text Drawing
    CGRect textRect = CGRectMake(18, 158, 253, 62);
    NSMutableParagraphStyle* textStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    textStyle.alignment = NSTextAlignmentCenter;

    NSDictionary* textFontAttributes = @{NSFontAttributeName: [UIFont systemFontOfSize: 22], NSForegroundColorAttributeName: UIColor.whiteColor, NSParagraphStyleAttributeName: textStyle};

    [@"Your Amazing account will be ready in\n" drawInRect: textRect withAttributes: textFontAttributes];
}

+ (void)drawTimeLabelWithRemainTime: (NSString*)remainTime
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Time Drawing
    CGRect timeRect = CGRectMake(6, 9, 202, 60);
    NSMutableParagraphStyle* timeStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    timeStyle.alignment = NSTextAlignmentCenter;

    NSDictionary* timeFontAttributes = @{NSFontAttributeName: [UIFont boldSystemFontOfSize: 45], NSForegroundColorAttributeName: UIColor.whiteColor, NSParagraphStyleAttributeName: timeStyle};

    CGFloat timeTextHeight = [remainTime boundingRectWithSize: CGSizeMake(timeRect.size.width, INFINITY)  options: NSStringDrawingUsesLineFragmentOrigin attributes: timeFontAttributes context: nil].size.height;
    CGContextSaveGState(context);
    CGContextClipToRect(context, timeRect);
    [remainTime drawInRect: CGRectMake(CGRectGetMinX(timeRect), CGRectGetMinY(timeRect) + (CGRectGetHeight(timeRect) - timeTextHeight) / 2, CGRectGetWidth(timeRect), timeTextHeight) withAttributes: timeFontAttributes];
    CGContextRestoreGState(context);
}

+ (void)drawFogWheelWithAngleRight: (CGFloat)angleRight angleLeft: (CGFloat)angleLeft
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color0 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];

    //// Bezier 2 Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 119, 113);
    CGContextRotateCTM(context, -angleRight * M_PI / 180);

    UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
    [bezier2Path moveToPoint: CGPointMake(-10.64, 0)];
    [bezier2Path addCurveToPoint: CGPointMake(0, -10.64) controlPoint1: CGPointMake(-10.64, -5.87) controlPoint2: CGPointMake(-5.87, -10.64)];
    [bezier2Path addCurveToPoint: CGPointMake(10.64, 0) controlPoint1: CGPointMake(5.87, -10.64) controlPoint2: CGPointMake(10.64, -5.87)];
    [bezier2Path addCurveToPoint: CGPointMake(0, 10.64) controlPoint1: CGPointMake(10.64, 5.87) controlPoint2: CGPointMake(5.87, 10.64)];
    [bezier2Path addCurveToPoint: CGPointMake(-10.64, 0) controlPoint1: CGPointMake(-5.87, 10.64) controlPoint2: CGPointMake(-10.64, 5.87)];
    [bezier2Path closePath];
    [bezier2Path moveToPoint: CGPointMake(0, -27.66)];
    [bezier2Path addCurveToPoint: CGPointMake(-27.66, 0) controlPoint1: CGPointMake(-15.28, -27.66) controlPoint2: CGPointMake(-27.66, -15.28)];
    [bezier2Path addCurveToPoint: CGPointMake(0, 27.66) controlPoint1: CGPointMake(-27.66, 15.28) controlPoint2: CGPointMake(-15.28, 27.66)];
    [bezier2Path addCurveToPoint: CGPointMake(27.66, 0) controlPoint1: CGPointMake(15.28, 27.66) controlPoint2: CGPointMake(27.66, 15.28)];
    [bezier2Path addCurveToPoint: CGPointMake(0, -27.66) controlPoint1: CGPointMake(27.66, -15.28) controlPoint2: CGPointMake(15.28, -27.66)];
    [bezier2Path closePath];
    [bezier2Path moveToPoint: CGPointMake(-71.66, 20.34)];
    [bezier2Path addCurveToPoint: CGPointMake(-64.85, 36.59) controlPoint1: CGPointMake(-70.04, 26.09) controlPoint2: CGPointMake(-67.74, 31.53)];
    [bezier2Path addLineToPoint: CGPointMake(-77.62, 50.55)];
    [bezier2Path addCurveToPoint: CGPointMake(-77.62, 63.79) controlPoint1: CGPointMake(-81.28, 54.21) controlPoint2: CGPointMake(-81.28, 60.13)];
    [bezier2Path addLineToPoint: CGPointMake(-63.79, 77.62)];
    [bezier2Path addCurveToPoint: CGPointMake(-50.55, 77.62) controlPoint1: CGPointMake(-60.13, 81.28) controlPoint2: CGPointMake(-54.21, 81.28)];
    [bezier2Path addLineToPoint: CGPointMake(-36.59, 64.85)];
    [bezier2Path addCurveToPoint: CGPointMake(-20.34, 71.66) controlPoint1: CGPointMake(-31.53, 67.75) controlPoint2: CGPointMake(-26.08, 70.04)];
    [bezier2Path addLineToPoint: CGPointMake(-19.15, 90.64)];
    [bezier2Path addCurveToPoint: CGPointMake(-9.79, 100) controlPoint1: CGPointMake(-19.15, 95.83) controlPoint2: CGPointMake(-14.98, 100)];
    [bezier2Path addLineToPoint: CGPointMake(9.79, 100)];
    [bezier2Path addCurveToPoint: CGPointMake(19.15, 90.64) controlPoint1: CGPointMake(14.98, 100) controlPoint2: CGPointMake(19.15, 95.83)];
    [bezier2Path addLineToPoint: CGPointMake(20.34, 71.66)];
    [bezier2Path addCurveToPoint: CGPointMake(36.6, 64.85) controlPoint1: CGPointMake(26.09, 70.04) controlPoint2: CGPointMake(31.53, 67.75)];
    [bezier2Path addLineToPoint: CGPointMake(50.55, 77.62)];
    [bezier2Path addCurveToPoint: CGPointMake(63.79, 77.62) controlPoint1: CGPointMake(54.21, 81.28) controlPoint2: CGPointMake(60.13, 81.28)];
    [bezier2Path addLineToPoint: CGPointMake(77.62, 63.79)];
    [bezier2Path addCurveToPoint: CGPointMake(77.62, 50.55) controlPoint1: CGPointMake(81.28, 60.13) controlPoint2: CGPointMake(81.28, 54.22)];
    [bezier2Path addLineToPoint: CGPointMake(64.85, 36.59)];
    [bezier2Path addCurveToPoint: CGPointMake(71.66, 20.34) controlPoint1: CGPointMake(67.74, 31.53) controlPoint2: CGPointMake(70.04, 26.09)];
    [bezier2Path addLineToPoint: CGPointMake(90.64, 19.15)];
    [bezier2Path addCurveToPoint: CGPointMake(100, 9.79) controlPoint1: CGPointMake(95.83, 19.15) controlPoint2: CGPointMake(100, 14.98)];
    [bezier2Path addLineToPoint: CGPointMake(100, -9.79)];
    [bezier2Path addCurveToPoint: CGPointMake(90.64, -19.15) controlPoint1: CGPointMake(100, -14.98) controlPoint2: CGPointMake(95.83, -19.15)];
    [bezier2Path addLineToPoint: CGPointMake(71.66, -20.34)];
    [bezier2Path addCurveToPoint: CGPointMake(64.85, -36.59) controlPoint1: CGPointMake(70.04, -26.08) controlPoint2: CGPointMake(67.74, -31.53)];
    [bezier2Path addLineToPoint: CGPointMake(77.62, -50.55)];
    [bezier2Path addCurveToPoint: CGPointMake(77.62, -63.79) controlPoint1: CGPointMake(81.28, -54.21) controlPoint2: CGPointMake(81.28, -60.13)];
    [bezier2Path addLineToPoint: CGPointMake(63.79, -77.62)];
    [bezier2Path addCurveToPoint: CGPointMake(50.55, -77.62) controlPoint1: CGPointMake(60.13, -81.28) controlPoint2: CGPointMake(54.21, -81.28)];
    [bezier2Path addLineToPoint: CGPointMake(36.6, -64.85)];
    [bezier2Path addCurveToPoint: CGPointMake(20.34, -71.66) controlPoint1: CGPointMake(31.53, -67.74) controlPoint2: CGPointMake(26.09, -70.04)];
    [bezier2Path addLineToPoint: CGPointMake(19.15, -90.64)];
    [bezier2Path addCurveToPoint: CGPointMake(9.79, -100) controlPoint1: CGPointMake(19.15, -95.83) controlPoint2: CGPointMake(14.98, -100)];
    [bezier2Path addLineToPoint: CGPointMake(-9.79, -100)];
    [bezier2Path addCurveToPoint: CGPointMake(-19.15, -90.64) controlPoint1: CGPointMake(-14.98, -100) controlPoint2: CGPointMake(-19.15, -95.83)];
    [bezier2Path addLineToPoint: CGPointMake(-20.34, -71.66)];
    [bezier2Path addCurveToPoint: CGPointMake(-36.59, -64.85) controlPoint1: CGPointMake(-26.08, -70.04) controlPoint2: CGPointMake(-31.53, -67.74)];
    [bezier2Path addLineToPoint: CGPointMake(-50.55, -77.62)];
    [bezier2Path addCurveToPoint: CGPointMake(-63.79, -77.62) controlPoint1: CGPointMake(-54.21, -81.28) controlPoint2: CGPointMake(-60.13, -81.28)];
    [bezier2Path addLineToPoint: CGPointMake(-77.62, -63.79)];
    [bezier2Path addCurveToPoint: CGPointMake(-77.62, -50.55) controlPoint1: CGPointMake(-81.28, -60.13) controlPoint2: CGPointMake(-81.28, -54.21)];
    [bezier2Path addLineToPoint: CGPointMake(-64.85, -36.59)];
    [bezier2Path addCurveToPoint: CGPointMake(-71.66, -20.34) controlPoint1: CGPointMake(-67.74, -31.53) controlPoint2: CGPointMake(-70.04, -26.08)];
    [bezier2Path addLineToPoint: CGPointMake(-90.64, -19.15)];
    [bezier2Path addCurveToPoint: CGPointMake(-100, -9.79) controlPoint1: CGPointMake(-95.83, -19.15) controlPoint2: CGPointMake(-100, -14.98)];
    [bezier2Path addLineToPoint: CGPointMake(-100, 9.79)];
    [bezier2Path addCurveToPoint: CGPointMake(-90.64, 19.15) controlPoint1: CGPointMake(-100, 14.98) controlPoint2: CGPointMake(-95.83, 19.15)];
    [bezier2Path addLineToPoint: CGPointMake(-71.66, 20.34)];
    [bezier2Path closePath];
    [bezier2Path moveToPoint: CGPointMake(0, -44.68)];
    [bezier2Path addCurveToPoint: CGPointMake(44.68, 0) controlPoint1: CGPointMake(24.68, -44.68) controlPoint2: CGPointMake(44.68, -24.68)];
    [bezier2Path addCurveToPoint: CGPointMake(0, 44.68) controlPoint1: CGPointMake(44.68, 24.68) controlPoint2: CGPointMake(24.68, 44.68)];
    [bezier2Path addCurveToPoint: CGPointMake(-44.68, 0) controlPoint1: CGPointMake(-24.68, 44.68) controlPoint2: CGPointMake(-44.68, 24.68)];
    [bezier2Path addCurveToPoint: CGPointMake(0, -44.68) controlPoint1: CGPointMake(-44.68, -24.68) controlPoint2: CGPointMake(-24.68, -44.68)];
    [bezier2Path closePath];
    bezier2Path.miterLimit = 4;

    bezier2Path.usesEvenOddFillRule = YES;

    [color0 setFill];
    [bezier2Path fill];

    CGContextRestoreGState(context);


    //// Bezier Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 245.73, 192);
    CGContextRotateCTM(context, -angleLeft * M_PI / 180);

    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(-6.88, 0)];
    [bezierPath addCurveToPoint: CGPointMake(0, -6.89) controlPoint1: CGPointMake(-6.88, -3.8) controlPoint2: CGPointMake(-3.8, -6.89)];
    [bezierPath addCurveToPoint: CGPointMake(6.88, 0) controlPoint1: CGPointMake(3.8, -6.89) controlPoint2: CGPointMake(6.88, -3.8)];
    [bezierPath addCurveToPoint: CGPointMake(0, 6.89) controlPoint1: CGPointMake(6.88, 3.8) controlPoint2: CGPointMake(3.8, 6.89)];
    [bezierPath addCurveToPoint: CGPointMake(-6.88, 0) controlPoint1: CGPointMake(-3.8, 6.89) controlPoint2: CGPointMake(-6.88, 3.8)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(0, -17.91)];
    [bezierPath addCurveToPoint: CGPointMake(-17.9, 0) controlPoint1: CGPointMake(-9.88, -17.91) controlPoint2: CGPointMake(-17.9, -9.89)];
    [bezierPath addCurveToPoint: CGPointMake(0, 17.91) controlPoint1: CGPointMake(-17.9, 9.89) controlPoint2: CGPointMake(-9.88, 17.91)];
    [bezierPath addCurveToPoint: CGPointMake(17.9, 0) controlPoint1: CGPointMake(9.88, 17.91) controlPoint2: CGPointMake(17.9, 9.89)];
    [bezierPath addCurveToPoint: CGPointMake(0, -17.91) controlPoint1: CGPointMake(17.9, -9.89) controlPoint2: CGPointMake(9.88, -17.91)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(-46.36, 13.17)];
    [bezierPath addCurveToPoint: CGPointMake(-41.96, 23.69) controlPoint1: CGPointMake(-45.32, 16.89) controlPoint2: CGPointMake(-43.83, 20.42)];
    [bezierPath addLineToPoint: CGPointMake(-50.22, 32.73)];
    [bezierPath addCurveToPoint: CGPointMake(-50.22, 41.3) controlPoint1: CGPointMake(-52.59, 35.1) controlPoint2: CGPointMake(-52.59, 38.93)];
    [bezierPath addLineToPoint: CGPointMake(-41.27, 50.25)];
    [bezierPath addCurveToPoint: CGPointMake(-32.71, 50.25) controlPoint1: CGPointMake(-38.9, 52.62) controlPoint2: CGPointMake(-35.08, 52.62)];
    [bezierPath addLineToPoint: CGPointMake(-23.68, 41.99)];
    [bezierPath addCurveToPoint: CGPointMake(-13.16, 46.39) controlPoint1: CGPointMake(-20.4, 43.86) controlPoint2: CGPointMake(-16.88, 45.35)];
    [bezierPath addLineToPoint: CGPointMake(-12.39, 58.68)];
    [bezierPath addCurveToPoint: CGPointMake(-6.33, 64.74) controlPoint1: CGPointMake(-12.39, 62.04) controlPoint2: CGPointMake(-9.69, 64.74)];
    [bezierPath addLineToPoint: CGPointMake(6.33, 64.74)];
    [bezierPath addCurveToPoint: CGPointMake(12.39, 58.68) controlPoint1: CGPointMake(9.69, 64.74) controlPoint2: CGPointMake(12.39, 62.04)];
    [bezierPath addLineToPoint: CGPointMake(13.16, 46.39)];
    [bezierPath addCurveToPoint: CGPointMake(23.68, 41.99) controlPoint1: CGPointMake(16.88, 45.35) controlPoint2: CGPointMake(20.4, 43.86)];
    [bezierPath addLineToPoint: CGPointMake(32.71, 50.25)];
    [bezierPath addCurveToPoint: CGPointMake(41.27, 50.25) controlPoint1: CGPointMake(35.08, 52.62) controlPoint2: CGPointMake(38.9, 52.62)];
    [bezierPath addLineToPoint: CGPointMake(50.22, 41.3)];
    [bezierPath addCurveToPoint: CGPointMake(50.22, 32.73) controlPoint1: CGPointMake(52.59, 38.93) controlPoint2: CGPointMake(52.59, 35.1)];
    [bezierPath addLineToPoint: CGPointMake(41.96, 23.69)];
    [bezierPath addCurveToPoint: CGPointMake(46.36, 13.17) controlPoint1: CGPointMake(43.83, 20.41) controlPoint2: CGPointMake(45.32, 16.89)];
    [bezierPath addLineToPoint: CGPointMake(58.64, 12.4)];
    [bezierPath addCurveToPoint: CGPointMake(64.7, 6.34) controlPoint1: CGPointMake(62, 12.4) controlPoint2: CGPointMake(64.7, 9.7)];
    [bezierPath addLineToPoint: CGPointMake(64.7, -6.33)];
    [bezierPath addCurveToPoint: CGPointMake(58.64, -12.4) controlPoint1: CGPointMake(64.7, -9.7) controlPoint2: CGPointMake(62, -12.4)];
    [bezierPath addLineToPoint: CGPointMake(46.36, -13.17)];
    [bezierPath addCurveToPoint: CGPointMake(41.96, -23.69) controlPoint1: CGPointMake(45.32, -16.89) controlPoint2: CGPointMake(43.83, -20.41)];
    [bezierPath addLineToPoint: CGPointMake(50.22, -32.73)];
    [bezierPath addCurveToPoint: CGPointMake(50.22, -41.3) controlPoint1: CGPointMake(52.59, -35.1) controlPoint2: CGPointMake(52.59, -38.93)];
    [bezierPath addLineToPoint: CGPointMake(41.27, -50.25)];
    [bezierPath addCurveToPoint: CGPointMake(32.71, -50.25) controlPoint1: CGPointMake(38.9, -52.62) controlPoint2: CGPointMake(35.08, -52.62)];
    [bezierPath addLineToPoint: CGPointMake(23.68, -41.99)];
    [bezierPath addCurveToPoint: CGPointMake(13.16, -46.39) controlPoint1: CGPointMake(20.4, -43.86) controlPoint2: CGPointMake(16.88, -45.35)];
    [bezierPath addLineToPoint: CGPointMake(12.39, -58.68)];
    [bezierPath addCurveToPoint: CGPointMake(6.33, -64.74) controlPoint1: CGPointMake(12.39, -62.04) controlPoint2: CGPointMake(9.69, -64.74)];
    [bezierPath addLineToPoint: CGPointMake(-6.33, -64.74)];
    [bezierPath addCurveToPoint: CGPointMake(-12.39, -58.68) controlPoint1: CGPointMake(-9.69, -64.74) controlPoint2: CGPointMake(-12.39, -62.04)];
    [bezierPath addLineToPoint: CGPointMake(-13.16, -46.39)];
    [bezierPath addCurveToPoint: CGPointMake(-23.68, -41.99) controlPoint1: CGPointMake(-16.88, -45.35) controlPoint2: CGPointMake(-20.4, -43.86)];
    [bezierPath addLineToPoint: CGPointMake(-32.71, -50.25)];
    [bezierPath addCurveToPoint: CGPointMake(-41.27, -50.25) controlPoint1: CGPointMake(-35.08, -52.62) controlPoint2: CGPointMake(-38.9, -52.62)];
    [bezierPath addLineToPoint: CGPointMake(-50.22, -41.3)];
    [bezierPath addCurveToPoint: CGPointMake(-50.22, -32.73) controlPoint1: CGPointMake(-52.59, -38.93) controlPoint2: CGPointMake(-52.59, -35.1)];
    [bezierPath addLineToPoint: CGPointMake(-41.96, -23.69)];
    [bezierPath addCurveToPoint: CGPointMake(-46.36, -13.17) controlPoint1: CGPointMake(-43.83, -20.41) controlPoint2: CGPointMake(-45.32, -16.89)];
    [bezierPath addLineToPoint: CGPointMake(-58.64, -12.4)];
    [bezierPath addCurveToPoint: CGPointMake(-64.7, -6.33) controlPoint1: CGPointMake(-62, -12.4) controlPoint2: CGPointMake(-64.7, -9.7)];
    [bezierPath addLineToPoint: CGPointMake(-64.7, 6.34)];
    [bezierPath addCurveToPoint: CGPointMake(-58.64, 12.4) controlPoint1: CGPointMake(-64.7, 9.7) controlPoint2: CGPointMake(-62, 12.4)];
    [bezierPath addLineToPoint: CGPointMake(-46.36, 13.17)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(0, -28.93)];
    [bezierPath addCurveToPoint: CGPointMake(28.91, 0) controlPoint1: CGPointMake(15.97, -28.93) controlPoint2: CGPointMake(28.91, -15.98)];
    [bezierPath addCurveToPoint: CGPointMake(0, 28.93) controlPoint1: CGPointMake(28.91, 15.98) controlPoint2: CGPointMake(15.97, 28.93)];
    [bezierPath addCurveToPoint: CGPointMake(-28.91, 0) controlPoint1: CGPointMake(-15.97, 28.93) controlPoint2: CGPointMake(-28.91, 15.98)];
    [bezierPath addCurveToPoint: CGPointMake(0, -28.93) controlPoint1: CGPointMake(-28.91, -15.98) controlPoint2: CGPointMake(-15.97, -28.93)];
    [bezierPath closePath];
    bezierPath.miterLimit = 4;

    bezierPath.usesEvenOddFillRule = YES;

    [color0 setFill];
    [bezierPath fill];

    CGContextRestoreGState(context);
}

#pragma mark Generated Images

+ (UIImage*)imageOfMessageRectangle
{
    if (_imageOfMessageRectangle)
        return _imageOfMessageRectangle;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(287, 336), NO, 0.0f);
    [AmazingStyleKit drawMessageRectangle];

    _imageOfMessageRectangle = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfMessageRectangle;
}

+ (UIImage*)imageOfTimeLabelWithRemainTime: (NSString*)remainTime
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(213, 79), NO, 0.0f);
    [AmazingStyleKit drawTimeLabelWithRemainTime: remainTime];

    UIImage* imageOfTimeLabel = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfTimeLabel;
}

+ (UIImage*)imageOfFogWheelWithAngleRight: (CGFloat)angleRight angleLeft: (CGFloat)angleLeft
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(334, 270), NO, 0.0f);
    [AmazingStyleKit drawFogWheelWithAngleRight: angleRight angleLeft: angleLeft];

    UIImage* imageOfFogWheel = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfFogWheel;
}

#pragma mark Customization Infrastructure

- (void)setMessageRectangleTargets: (NSArray*)messageRectangleTargets
{
    _messageRectangleTargets = messageRectangleTargets;

    for (id target in self.messageRectangleTargets)
        [target setImage: AmazingStyleKit.imageOfMessageRectangle];
}


@end
