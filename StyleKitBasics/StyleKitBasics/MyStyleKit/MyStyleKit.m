//
//  MyStyleKit.m
//  ProjectName
//
//  Created by Ishan Weerasooriya on 10/8/15.
//  Copyright (c) 2015 Appmonkeyz. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "MyStyleKit.h"


@implementation MyStyleKit

#pragma mark Cache

static UIColor* _customGreen = nil;

static UIImage* _imageOfChatIcon = nil;
static UIImage* _imageOfPaperPlane = nil;
static UIImage* _imageOfMail = nil;
static UIImage* _imageOfDeleteBin = nil;
static UIImage* _imageOfLocationIcon = nil;
static UIImage* _imageOfPencil = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _customGreen = [UIColor colorWithRed: 0.145 green: 0.63 blue: 0.531 alpha: 1];

}

#pragma mark Colors

+ (UIColor*)customGreen { return _customGreen; }

#pragma mark Drawing Methods

+ (void)drawChatIcon
{
    //// Color Declarations
    UIColor* color2 = [UIColor colorWithRed: 0.351 green: 0.657 blue: 0.481 alpha: 0.19];

    //// Group
    {
        //// Oval 2 Drawing
        UIBezierPath* oval2Path = UIBezierPath.bezierPath;
        [oval2Path moveToPoint: CGPointMake(106.31, 71.7)];
        [oval2Path addCurveToPoint: CGPointMake(73.36, 77.4) controlPoint1: CGPointMake(94.62, 70.88) controlPoint2: CGPointMake(82.35, 72.79)];
        [oval2Path addCurveToPoint: CGPointMake(62.28, 94.36) controlPoint1: CGPointMake(64.37, 82.03) controlPoint2: CGPointMake(60.67, 88.35)];
        oval2Path.lineCapStyle = kCGLineCapRound;

        [MyStyleKit.customGreen setStroke];
        oval2Path.lineWidth = 4;
        [oval2Path stroke];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(137.67, 69.92)];
        [bezier2Path addCurveToPoint: CGPointMake(137.67, 113.86) controlPoint1: CGPointMake(157.19, 82.05) controlPoint2: CGPointMake(157.19, 101.72)];
        [bezier2Path addCurveToPoint: CGPointMake(82.93, 120.54) controlPoint1: CGPointMake(122.87, 123.05) controlPoint2: CGPointMake(101.1, 125.28)];
        [bezier2Path addCurveToPoint: CGPointMake(62.86, 130.18) controlPoint1: CGPointMake(73.62, 126) controlPoint2: CGPointMake(62.86, 130.18)];
        [bezier2Path addCurveToPoint: CGPointMake(70.44, 115.83) controlPoint1: CGPointMake(62.86, 130.18) controlPoint2: CGPointMake(67.04, 123.2)];
        [bezier2Path addCurveToPoint: CGPointMake(66.96, 113.86) controlPoint1: CGPointMake(69.24, 115.21) controlPoint2: CGPointMake(68.08, 114.55)];
        [bezier2Path addCurveToPoint: CGPointMake(66.54, 70.18) controlPoint1: CGPointMake(47.58, 101.81) controlPoint2: CGPointMake(47.44, 82.34)];
        [bezier2Path addCurveToPoint: CGPointMake(66.96, 69.92) controlPoint1: CGPointMake(66.68, 70.09) controlPoint2: CGPointMake(66.82, 70)];
        [bezier2Path addCurveToPoint: CGPointMake(137.67, 69.92) controlPoint1: CGPointMake(86.49, 57.78) controlPoint2: CGPointMake(118.14, 57.78)];
        [bezier2Path closePath];
        [MyStyleKit.customGreen setStroke];
        bezier2Path.lineWidth = 4.5;
        [bezier2Path stroke];


        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(33.5, 26.5, 138, 138)];
        [color2 setFill];
        [ovalPath fill];
        [MyStyleKit.customGreen setStroke];
        ovalPath.lineWidth = 3;
        [ovalPath stroke];
    }
}

+ (void)drawPaperPlane
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color2 = [UIColor colorWithRed: 0.351 green: 0.657 blue: 0.481 alpha: 0.19];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(31, 26, 138, 138)];
    [color2 setFill];
    [ovalPath fill];
    [MyStyleKit.customGreen setStroke];
    ovalPath.lineWidth = 3;
    [ovalPath stroke];


    //// Group
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 94.14, 102.28);
        CGContextRotateCTM(context, 9.75 * M_PI / 180);



        //// Group 2
        {
            //// Bezier 2 Drawing
            UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
            [bezier2Path moveToPoint: CGPointMake(30.51, -56.16)];
            [bezier2Path addCurveToPoint: CGPointMake(24.26, 32.95) controlPoint1: CGPointMake(30.51, -56.16) controlPoint2: CGPointMake(24.26, 32.95)];
            [bezier2Path addCurveToPoint: CGPointMake(0.26, 20.19) controlPoint1: CGPointMake(24.26, 32.95) controlPoint2: CGPointMake(13.16, 27.05)];
            [bezier2Path addCurveToPoint: CGPointMake(-10.12, 34.04) controlPoint1: CGPointMake(-4.17, 26.1) controlPoint2: CGPointMake(-10.12, 34.04)];
            [bezier2Path addCurveToPoint: CGPointMake(-20.22, 9.3) controlPoint1: CGPointMake(-10.12, 34.04) controlPoint2: CGPointMake(-17.33, 16.38)];
            [bezier2Path addCurveToPoint: CGPointMake(-38.94, -0.65) controlPoint1: CGPointMake(-30.73, 3.72) controlPoint2: CGPointMake(-38.94, -0.65)];
            [bezier2Path addLineToPoint: CGPointMake(30.51, -56.16)];
            [bezier2Path addLineToPoint: CGPointMake(30.51, -56.16)];
            [bezier2Path closePath];
            [MyStyleKit.customGreen setStroke];
            bezier2Path.lineWidth = 4;
            [bezier2Path stroke];


            //// Bezier Drawing
            UIBezierPath* bezierPath = UIBezierPath.bezierPath;
            [bezierPath moveToPoint: CGPointMake(-20.21, 9.74)];
            [bezierPath addLineToPoint: CGPointMake(27.33, -50.18)];
            [bezierPath addLineToPoint: CGPointMake(-0.1, 20.49)];
            [MyStyleKit.customGreen setStroke];
            bezierPath.lineWidth = 2;
            [bezierPath stroke];
        }



        CGContextRestoreGState(context);
    }
}

+ (void)drawMail
{
    //// Color Declarations
    UIColor* color2 = [UIColor colorWithRed: 0.351 green: 0.657 blue: 0.481 alpha: 0.19];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(30.5, 26.5, 138, 138)];
    [color2 setFill];
    [ovalPath fill];
    [MyStyleKit.customGreen setStroke];
    ovalPath.lineWidth = 3;
    [ovalPath stroke];


    //// Bezier 2 Drawing
    UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
    [bezier2Path moveToPoint: CGPointMake(142.23, 65.36)];
    [bezier2Path addLineToPoint: CGPointMake(56.99, 65.36)];
    [bezier2Path addLineToPoint: CGPointMake(56.25, 65.36)];
    [bezier2Path addLineToPoint: CGPointMake(54.45, 65.36)];
    [bezier2Path addLineToPoint: CGPointMake(53.22, 65.36)];
    [bezier2Path addLineToPoint: CGPointMake(53.22, 125)];
    [bezier2Path addLineToPoint: CGPointMake(146, 125)];
    [bezier2Path addLineToPoint: CGPointMake(146, 65.36)];
    [bezier2Path addLineToPoint: CGPointMake(142.79, 65.36)];
    [bezier2Path addLineToPoint: CGPointMake(142.23, 65.36)];
    [bezier2Path closePath];
    [bezier2Path moveToPoint: CGPointMake(138.51, 69.09)];
    [bezier2Path addLineToPoint: CGPointMake(102.67, 105.09)];
    [bezier2Path addCurveToPoint: CGPointMake(96.55, 105.09) controlPoint1: CGPointMake(101.04, 106.73) controlPoint2: CGPointMake(98.18, 106.73)];
    [bezier2Path addLineToPoint: CGPointMake(60.7, 69.09)];
    [bezier2Path addLineToPoint: CGPointMake(138.51, 69.09)];
    [bezier2Path closePath];
    [bezier2Path moveToPoint: CGPointMake(56.93, 70.57)];
    [bezier2Path addLineToPoint: CGPointMake(81.03, 94.77)];
    [bezier2Path addLineToPoint: CGPointMake(56.93, 118.97)];
    [bezier2Path addLineToPoint: CGPointMake(56.93, 70.57)];
    [bezier2Path closePath];
    [bezier2Path moveToPoint: CGPointMake(59.89, 121.27)];
    [bezier2Path addLineToPoint: CGPointMake(83.65, 97.41)];
    [bezier2Path addLineToPoint: CGPointMake(93.92, 107.72)];
    [bezier2Path addCurveToPoint: CGPointMake(99.61, 110.09) controlPoint1: CGPointMake(95.44, 109.25) controlPoint2: CGPointMake(97.46, 110.09)];
    [bezier2Path addCurveToPoint: CGPointMake(105.29, 107.72) controlPoint1: CGPointMake(101.76, 110.09) controlPoint2: CGPointMake(103.78, 109.25)];
    [bezier2Path addLineToPoint: CGPointMake(115.56, 97.41)];
    [bezier2Path addLineToPoint: CGPointMake(139.33, 121.27)];
    [bezier2Path addLineToPoint: CGPointMake(59.89, 121.27)];
    [bezier2Path closePath];
    [bezier2Path moveToPoint: CGPointMake(142.29, 118.98)];
    [bezier2Path addLineToPoint: CGPointMake(118.19, 94.77)];
    [bezier2Path addLineToPoint: CGPointMake(142.29, 70.57)];
    [bezier2Path addLineToPoint: CGPointMake(142.29, 118.98)];
    [bezier2Path addLineToPoint: CGPointMake(142.29, 118.98)];
    [bezier2Path closePath];
    bezier2Path.miterLimit = 4;

    bezier2Path.lineCapStyle = kCGLineCapRound;

    bezier2Path.lineJoinStyle = kCGLineJoinBevel;

    [MyStyleKit.customGreen setFill];
    [bezier2Path fill];
}

+ (void)drawDeleteBin
{
    //// Color Declarations
    UIColor* color2 = [UIColor colorWithRed: 0.351 green: 0.657 blue: 0.481 alpha: 0.19];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(31, 26, 138, 138)];
    [color2 setFill];
    [ovalPath fill];
    [MyStyleKit.customGreen setStroke];
    ovalPath.lineWidth = 3;
    [ovalPath stroke];


    //// Group
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(134.85, 60.31)];
        [bezier2Path addLineToPoint: CGPointMake(116.57, 60.31)];
        [bezier2Path addLineToPoint: CGPointMake(116.57, 56.64)];
        [bezier2Path addCurveToPoint: CGPointMake(109.25, 49.3) controlPoint1: CGPointMake(116.57, 52.59) controlPoint2: CGPointMake(113.29, 49.3)];
        [bezier2Path addLineToPoint: CGPointMake(90.96, 49.3)];
        [bezier2Path addCurveToPoint: CGPointMake(83.65, 56.64) controlPoint1: CGPointMake(86.92, 49.3) controlPoint2: CGPointMake(83.65, 52.59)];
        [bezier2Path addLineToPoint: CGPointMake(83.65, 60.31)];
        [bezier2Path addLineToPoint: CGPointMake(65.36, 60.31)];
        [bezier2Path addLineToPoint: CGPointMake(65.36, 63.98)];
        [bezier2Path addLineToPoint: CGPointMake(69.13, 63.98)];
        [bezier2Path addLineToPoint: CGPointMake(72.79, 133.67)];
        [bezier2Path addCurveToPoint: CGPointMake(80.11, 141) controlPoint1: CGPointMake(72.79, 137.72) controlPoint2: CGPointMake(76.07, 141)];
        [bezier2Path addLineToPoint: CGPointMake(120.34, 141)];
        [bezier2Path addCurveToPoint: CGPointMake(127.65, 133.67) controlPoint1: CGPointMake(124.38, 141) controlPoint2: CGPointMake(127.65, 137.72)];
        [bezier2Path addLineToPoint: CGPointMake(131.25, 63.98)];
        [bezier2Path addLineToPoint: CGPointMake(134.85, 63.98)];
        [bezier2Path addLineToPoint: CGPointMake(134.85, 60.31)];
        [bezier2Path closePath];
        [bezier2Path moveToPoint: CGPointMake(87.31, 56.64)];
        [bezier2Path addCurveToPoint: CGPointMake(90.96, 52.97) controlPoint1: CGPointMake(87.31, 54.62) controlPoint2: CGPointMake(88.95, 52.97)];
        [bezier2Path addLineToPoint: CGPointMake(109.25, 52.97)];
        [bezier2Path addCurveToPoint: CGPointMake(112.91, 56.64) controlPoint1: CGPointMake(111.27, 52.97) controlPoint2: CGPointMake(112.91, 54.62)];
        [bezier2Path addLineToPoint: CGPointMake(112.91, 60.31)];
        [bezier2Path addLineToPoint: CGPointMake(87.31, 60.31)];
        [bezier2Path addLineToPoint: CGPointMake(87.31, 56.64)];
        [bezier2Path closePath];
        [bezier2Path moveToPoint: CGPointMake(124, 133.48)];
        [bezier2Path addLineToPoint: CGPointMake(123.99, 133.57)];
        [bezier2Path addLineToPoint: CGPointMake(123.99, 133.67)];
        [bezier2Path addCurveToPoint: CGPointMake(120.34, 137.33) controlPoint1: CGPointMake(123.99, 135.69) controlPoint2: CGPointMake(122.36, 137.33)];
        [bezier2Path addLineToPoint: CGPointMake(80.11, 137.33)];
        [bezier2Path addCurveToPoint: CGPointMake(76.45, 133.67) controlPoint1: CGPointMake(78.09, 137.33) controlPoint2: CGPointMake(76.45, 135.69)];
        [bezier2Path addLineToPoint: CGPointMake(76.45, 133.57)];
        [bezier2Path addLineToPoint: CGPointMake(76.45, 133.47)];
        [bezier2Path addLineToPoint: CGPointMake(72.79, 63.98)];
        [bezier2Path addLineToPoint: CGPointMake(127.59, 63.98)];
        [bezier2Path addLineToPoint: CGPointMake(124, 133.48)];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [MyStyleKit.customGreen setFill];
        [bezier2Path fill];


        //// Rectangle 2 Drawing
        UIBezierPath* rectangle2Path = [UIBezierPath bezierPathWithRect: CGRectMake(98.17, 71.51, 3.87, 58.88)];
        [MyStyleKit.customGreen setFill];
        [rectangle2Path fill];


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = UIBezierPath.bezierPath;
        [bezier4Path moveToPoint: CGPointMake(91.05, 129.88)];
        [bezier4Path addLineToPoint: CGPointMake(87.3, 71.31)];
        [bezier4Path addLineToPoint: CGPointMake(83.65, 71.54)];
        [bezier4Path addLineToPoint: CGPointMake(87.4, 130.11)];
        [bezier4Path addLineToPoint: CGPointMake(91.05, 129.88)];
        [bezier4Path closePath];
        bezier4Path.miterLimit = 4;

        [MyStyleKit.customGreen setFill];
        [bezier4Path fill];


        //// Bezier 6 Drawing
        UIBezierPath* bezier6Path = UIBezierPath.bezierPath;
        [bezier6Path moveToPoint: CGPointMake(116.59, 71.43)];
        [bezier6Path addLineToPoint: CGPointMake(112.94, 71.2)];
        [bezier6Path addLineToPoint: CGPointMake(109.25, 129.88)];
        [bezier6Path addLineToPoint: CGPointMake(112.9, 130.11)];
        [bezier6Path addLineToPoint: CGPointMake(116.59, 71.43)];
        [bezier6Path closePath];
        bezier6Path.miterLimit = 4;

        [MyStyleKit.customGreen setFill];
        [bezier6Path fill];
    }
}

+ (void)drawFood
{

    //// food_1_
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(169.26, 120.97)];
        [bezier2Path addLineToPoint: CGPointMake(155.56, 120.97)];
        [bezier2Path addCurveToPoint: CGPointMake(154.74, 117.37) controlPoint1: CGPointMake(155.33, 119.75) controlPoint2: CGPointMake(155.05, 118.56)];
        [bezier2Path addLineToPoint: CGPointMake(179.19, 105.15)];
        [bezier2Path addCurveToPoint: CGPointMake(181.46, 98.32) controlPoint1: CGPointMake(181.7, 103.89) controlPoint2: CGPointMake(182.72, 100.83)];
        [bezier2Path addCurveToPoint: CGPointMake(174.63, 96.04) controlPoint1: CGPointMake(180.2, 95.8) controlPoint2: CGPointMake(177.15, 94.79)];
        [bezier2Path addLineToPoint: CGPointMake(151.31, 107.69)];
        [bezier2Path addCurveToPoint: CGPointMake(100.5, 75.13) controlPoint1: CGPointMake(142.42, 88.5) controlPoint2: CGPointMake(123.01, 75.13)];
        [bezier2Path addCurveToPoint: CGPointMake(45.44, 120.97) controlPoint1: CGPointMake(73.08, 75.13) controlPoint2: CGPointMake(50.25, 94.93)];
        [bezier2Path addLineToPoint: CGPointMake(31.73, 120.97)];
        [bezier2Path addCurveToPoint: CGPointMake(19, 133.7) controlPoint1: CGPointMake(24.72, 120.97) controlPoint2: CGPointMake(19, 126.68)];
        [bezier2Path addCurveToPoint: CGPointMake(21.57, 140.47) controlPoint1: CGPointMake(19, 136.2) controlPoint2: CGPointMake(19.92, 138.61)];
        [bezier2Path addLineToPoint: CGPointMake(39.37, 160.5)];
        [bezier2Path addLineToPoint: CGPointMake(39.37, 164.27)];
        [bezier2Path addCurveToPoint: CGPointMake(52.11, 177) controlPoint1: CGPointMake(39.37, 171.29) controlPoint2: CGPointMake(45.09, 177)];
        [bezier2Path addLineToPoint: CGPointMake(148.89, 177)];
        [bezier2Path addCurveToPoint: CGPointMake(161.62, 164.27) controlPoint1: CGPointMake(155.91, 177) controlPoint2: CGPointMake(161.62, 171.29)];
        [bezier2Path addLineToPoint: CGPointMake(161.62, 160.5)];
        [bezier2Path addLineToPoint: CGPointMake(179.42, 140.47)];
        [bezier2Path addCurveToPoint: CGPointMake(182, 133.7) controlPoint1: CGPointMake(181.08, 138.61) controlPoint2: CGPointMake(182, 136.2)];
        [bezier2Path addCurveToPoint: CGPointMake(169.26, 120.97) controlPoint1: CGPointMake(182, 126.68) controlPoint2: CGPointMake(176.29, 120.97)];
        [bezier2Path closePath];
        [bezier2Path moveToPoint: CGPointMake(150.41, 120.97)];
        [bezier2Path addLineToPoint: CGPointMake(147.55, 120.97)];
        [bezier2Path addLineToPoint: CGPointMake(150.09, 119.7)];
        [bezier2Path addCurveToPoint: CGPointMake(150.41, 120.97) controlPoint1: CGPointMake(150.18, 120.12) controlPoint2: CGPointMake(150.32, 120.54)];
        [bezier2Path closePath];
        [bezier2Path moveToPoint: CGPointMake(100.5, 80.22)];
        [bezier2Path addCurveToPoint: CGPointMake(146.76, 109.97) controlPoint1: CGPointMake(121.02, 80.22) controlPoint2: CGPointMake(138.7, 92.44)];
        [bezier2Path addLineToPoint: CGPointMake(142.22, 112.24)];
        [bezier2Path addCurveToPoint: CGPointMake(100.5, 85.31) controlPoint1: CGPointMake(135.01, 96.37) controlPoint2: CGPointMake(119.07, 85.31)];
        [bezier2Path addCurveToPoint: CGPointMake(55.83, 120.97) controlPoint1: CGPointMake(78.69, 85.31) controlPoint2: CGPointMake(60.47, 100.56)];
        [bezier2Path addLineToPoint: CGPointMake(50.59, 120.97)];
        [bezier2Path addCurveToPoint: CGPointMake(100.5, 80.22) controlPoint1: CGPointMake(55.32, 97.75) controlPoint2: CGPointMake(75.9, 80.22)];
        [bezier2Path closePath];
        [bezier2Path moveToPoint: CGPointMake(123.81, 120.97)];
        [bezier2Path addCurveToPoint: CGPointMake(100.5, 105.69) controlPoint1: CGPointMake(119.87, 111.99) controlPoint2: CGPointMake(110.92, 105.69)];
        [bezier2Path addCurveToPoint: CGPointMake(77.19, 120.97) controlPoint1: CGPointMake(90.08, 105.69) controlPoint2: CGPointMake(81.13, 111.99)];
        [bezier2Path addLineToPoint: CGPointMake(71.72, 120.97)];
        [bezier2Path addCurveToPoint: CGPointMake(100.5, 100.59) controlPoint1: CGPointMake(75.93, 109.12) controlPoint2: CGPointMake(87.22, 100.59)];
        [bezier2Path addCurveToPoint: CGPointMake(128.56, 119.07) controlPoint1: CGPointMake(113.06, 100.59) controlPoint2: CGPointMake(123.87, 108.21)];
        [bezier2Path addLineToPoint: CGPointMake(124.77, 120.97)];
        [bezier2Path addLineToPoint: CGPointMake(123.81, 120.97)];
        [bezier2Path closePath];
        [bezier2Path moveToPoint: CGPointMake(100.5, 115.88)];
        [bezier2Path addCurveToPoint: CGPointMake(89.19, 120.97) controlPoint1: CGPointMake(96, 115.88) controlPoint2: CGPointMake(91.99, 117.87)];
        [bezier2Path addLineToPoint: CGPointMake(82.96, 120.97)];
        [bezier2Path addCurveToPoint: CGPointMake(100.5, 110.78) controlPoint1: CGPointMake(86.49, 114.91) controlPoint2: CGPointMake(92.99, 110.78)];
        [bezier2Path addCurveToPoint: CGPointMake(118.04, 120.97) controlPoint1: CGPointMake(108, 110.78) controlPoint2: CGPointMake(114.51, 114.91)];
        [bezier2Path addLineToPoint: CGPointMake(111.8, 120.97)];
        [bezier2Path addCurveToPoint: CGPointMake(100.5, 115.88) controlPoint1: CGPointMake(109.01, 117.87) controlPoint2: CGPointMake(105, 115.88)];
        [bezier2Path closePath];
        [bezier2Path moveToPoint: CGPointMake(100.5, 95.5)];
        [bezier2Path addCurveToPoint: CGPointMake(66.35, 120.97) controlPoint1: CGPointMake(84.38, 95.5) controlPoint2: CGPointMake(70.74, 106.26)];
        [bezier2Path addLineToPoint: CGPointMake(61.09, 120.97)];
        [bezier2Path addCurveToPoint: CGPointMake(100.5, 90.41) controlPoint1: CGPointMake(65.63, 103.43) controlPoint2: CGPointMake(81.55, 90.41)];
        [bezier2Path addCurveToPoint: CGPointMake(137.66, 114.52) controlPoint1: CGPointMake(117.03, 90.41) controlPoint2: CGPointMake(131.28, 100.33)];
        [bezier2Path addLineToPoint: CGPointMake(133.11, 116.79)];
        [bezier2Path addCurveToPoint: CGPointMake(100.5, 95.5) controlPoint1: CGPointMake(127.57, 104.28) controlPoint2: CGPointMake(115.04, 95.5)];
        [bezier2Path closePath];
        [bezier2Path moveToPoint: CGPointMake(151.44, 156.62)];
        [bezier2Path addLineToPoint: CGPointMake(151.44, 164.27)];
        [bezier2Path addCurveToPoint: CGPointMake(148.89, 166.81) controlPoint1: CGPointMake(151.44, 165.67) controlPoint2: CGPointMake(150.29, 166.81)];
        [bezier2Path addLineToPoint: CGPointMake(52.11, 166.81)];
        [bezier2Path addCurveToPoint: CGPointMake(49.56, 164.27) controlPoint1: CGPointMake(50.7, 166.81) controlPoint2: CGPointMake(49.56, 165.67)];
        [bezier2Path addLineToPoint: CGPointMake(49.56, 156.62)];
        [bezier2Path addLineToPoint: CGPointMake(29.19, 133.7)];
        [bezier2Path addCurveToPoint: CGPointMake(31.73, 131.16) controlPoint1: CGPointMake(29.19, 132.3) controlPoint2: CGPointMake(30.33, 131.16)];
        [bezier2Path addLineToPoint: CGPointMake(44.47, 131.16)];
        [bezier2Path addLineToPoint: CGPointMake(49.56, 131.16)];
        [bezier2Path addLineToPoint: CGPointMake(54.66, 131.16)];
        [bezier2Path addLineToPoint: CGPointMake(59.75, 131.16)];
        [bezier2Path addLineToPoint: CGPointMake(64.84, 131.16)];
        [bezier2Path addLineToPoint: CGPointMake(69.94, 131.16)];
        [bezier2Path addLineToPoint: CGPointMake(75.03, 131.16)];
        [bezier2Path addLineToPoint: CGPointMake(80.12, 131.16)];
        [bezier2Path addLineToPoint: CGPointMake(85.22, 131.16)];
        [bezier2Path addLineToPoint: CGPointMake(115.78, 131.16)];
        [bezier2Path addLineToPoint: CGPointMake(120.87, 131.16)];
        [bezier2Path addLineToPoint: CGPointMake(125.97, 131.16)];
        [bezier2Path addLineToPoint: CGPointMake(131.06, 131.16)];
        [bezier2Path addLineToPoint: CGPointMake(136.16, 131.16)];
        [bezier2Path addLineToPoint: CGPointMake(141.25, 131.16)];
        [bezier2Path addLineToPoint: CGPointMake(146.34, 131.16)];
        [bezier2Path addLineToPoint: CGPointMake(151.44, 131.16)];
        [bezier2Path addLineToPoint: CGPointMake(156.53, 131.16)];
        [bezier2Path addLineToPoint: CGPointMake(169.26, 131.16)];
        [bezier2Path addCurveToPoint: CGPointMake(171.81, 133.7) controlPoint1: CGPointMake(170.66, 131.16) controlPoint2: CGPointMake(171.81, 132.3)];
        [bezier2Path addLineToPoint: CGPointMake(151.44, 156.62)];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [MyStyleKit.customGreen setFill];
        [bezier2Path fill];


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = UIBezierPath.bezierPath;
        [bezier4Path moveToPoint: CGPointMake(59.63, 73.66)];
        [bezier4Path addCurveToPoint: CGPointMake(59.67, 73.75) controlPoint1: CGPointMake(59.65, 73.69) controlPoint2: CGPointMake(59.66, 73.72)];
        [bezier4Path addCurveToPoint: CGPointMake(59.68, 73.75) controlPoint1: CGPointMake(59.67, 73.75) controlPoint2: CGPointMake(59.68, 73.75)];
        [bezier4Path addCurveToPoint: CGPointMake(61.94, 75.13) controlPoint1: CGPointMake(60.11, 74.56) controlPoint2: CGPointMake(60.95, 75.13)];
        [bezier4Path addCurveToPoint: CGPointMake(64.5, 72.56) controlPoint1: CGPointMake(63.35, 75.13) controlPoint2: CGPointMake(64.5, 73.97)];
        [bezier4Path addCurveToPoint: CGPointMake(64.41, 71.93) controlPoint1: CGPointMake(64.5, 72.34) controlPoint2: CGPointMake(64.46, 72.13)];
        [bezier4Path addCurveToPoint: CGPointMake(64.41, 71.82) controlPoint1: CGPointMake(64.42, 71.89) controlPoint2: CGPointMake(64.42, 71.86)];
        [bezier4Path addCurveToPoint: CGPointMake(66.54, 57.09) controlPoint1: CGPointMake(62.5, 67.33) controlPoint2: CGPointMake(64.31, 62.4)];
        [bezier4Path addCurveToPoint: CGPointMake(68.69, 38.52) controlPoint1: CGPointMake(68.95, 51.36) controlPoint2: CGPointMake(71.53, 44.99)];
        [bezier4Path addCurveToPoint: CGPointMake(66.37, 36.92) controlPoint1: CGPointMake(68.33, 37.58) controlPoint2: CGPointMake(67.43, 36.92)];
        [bezier4Path addCurveToPoint: CGPointMake(63.87, 39.42) controlPoint1: CGPointMake(64.99, 36.92) controlPoint2: CGPointMake(63.87, 38.04)];
        [bezier4Path addCurveToPoint: CGPointMake(64.03, 40.28) controlPoint1: CGPointMake(63.87, 39.72) controlPoint2: CGPointMake(63.93, 40.01)];
        [bezier4Path addCurveToPoint: CGPointMake(64.04, 40.31) controlPoint1: CGPointMake(64.03, 40.29) controlPoint2: CGPointMake(64.03, 40.3)];
        [bezier4Path addCurveToPoint: CGPointMake(64.05, 40.36) controlPoint1: CGPointMake(64.04, 40.32) controlPoint2: CGPointMake(64.05, 40.34)];
        [bezier4Path addCurveToPoint: CGPointMake(64.08, 40.42) controlPoint1: CGPointMake(64.06, 40.38) controlPoint2: CGPointMake(64.07, 40.4)];
        [bezier4Path addCurveToPoint: CGPointMake(61.9, 55.15) controlPoint1: CGPointMake(66.14, 45.05) controlPoint2: CGPointMake(64.15, 49.79)];
        [bezier4Path addCurveToPoint: CGPointMake(59.54, 73.44) controlPoint1: CGPointMake(59.53, 60.8) controlPoint2: CGPointMake(56.9, 67.06)];
        [bezier4Path addCurveToPoint: CGPointMake(59.63, 73.66) controlPoint1: CGPointMake(59.57, 73.52) controlPoint2: CGPointMake(59.6, 73.59)];
        [bezier4Path closePath];
        bezier4Path.miterLimit = 4;

        [MyStyleKit.customGreen setFill];
        [bezier4Path fill];


        //// Bezier 6 Drawing
        UIBezierPath* bezier6Path = UIBezierPath.bezierPath;
        [bezier6Path moveToPoint: CGPointMake(121.66, 72.91)];
        [bezier6Path addCurveToPoint: CGPointMake(121.7, 73.01) controlPoint1: CGPointMake(121.68, 72.94) controlPoint2: CGPointMake(121.69, 72.98)];
        [bezier6Path addLineToPoint: CGPointMake(121.71, 73.01)];
        [bezier6Path addCurveToPoint: CGPointMake(123.97, 74.39) controlPoint1: CGPointMake(122.14, 73.82) controlPoint2: CGPointMake(122.98, 74.39)];
        [bezier6Path addCurveToPoint: CGPointMake(126.53, 71.82) controlPoint1: CGPointMake(125.38, 74.39) controlPoint2: CGPointMake(126.53, 73.24)];
        [bezier6Path addCurveToPoint: CGPointMake(126.44, 71.19) controlPoint1: CGPointMake(126.53, 71.61) controlPoint2: CGPointMake(126.49, 71.39)];
        [bezier6Path addCurveToPoint: CGPointMake(126.43, 71.09) controlPoint1: CGPointMake(126.45, 71.15) controlPoint2: CGPointMake(126.45, 71.12)];
        [bezier6Path addCurveToPoint: CGPointMake(128.57, 56.35) controlPoint1: CGPointMake(124.53, 66.59) controlPoint2: CGPointMake(126.34, 61.66)];
        [bezier6Path addCurveToPoint: CGPointMake(130.72, 37.78) controlPoint1: CGPointMake(130.98, 50.62) controlPoint2: CGPointMake(133.56, 44.25)];
        [bezier6Path addCurveToPoint: CGPointMake(128.39, 36.18) controlPoint1: CGPointMake(130.35, 36.84) controlPoint2: CGPointMake(129.46, 36.18)];
        [bezier6Path addCurveToPoint: CGPointMake(125.9, 38.68) controlPoint1: CGPointMake(127.02, 36.18) controlPoint2: CGPointMake(125.9, 37.3)];
        [bezier6Path addCurveToPoint: CGPointMake(126.06, 39.54) controlPoint1: CGPointMake(125.9, 38.98) controlPoint2: CGPointMake(125.97, 39.27)];
        [bezier6Path addCurveToPoint: CGPointMake(126.06, 39.57) controlPoint1: CGPointMake(126.06, 39.55) controlPoint2: CGPointMake(126.06, 39.56)];
        [bezier6Path addCurveToPoint: CGPointMake(126.08, 39.62) controlPoint1: CGPointMake(126.07, 39.59) controlPoint2: CGPointMake(126.07, 39.6)];
        [bezier6Path addCurveToPoint: CGPointMake(126.11, 39.68) controlPoint1: CGPointMake(126.1, 39.64) controlPoint2: CGPointMake(126.11, 39.66)];
        [bezier6Path addCurveToPoint: CGPointMake(123.93, 54.41) controlPoint1: CGPointMake(128.16, 44.31) controlPoint2: CGPointMake(126.18, 49.06)];
        [bezier6Path addCurveToPoint: CGPointMake(121.58, 72.71) controlPoint1: CGPointMake(121.56, 60.06) controlPoint2: CGPointMake(118.93, 66.33)];
        [bezier6Path addCurveToPoint: CGPointMake(121.66, 72.91) controlPoint1: CGPointMake(121.6, 72.78) controlPoint2: CGPointMake(121.63, 72.85)];
        [bezier6Path closePath];
        bezier6Path.miterLimit = 4;

        [MyStyleKit.customGreen setFill];
        [bezier6Path fill];


        //// Bezier 8 Drawing
        UIBezierPath* bezier8Path = UIBezierPath.bezierPath;
        [bezier8Path moveToPoint: CGPointMake(95.5, 50.74)];
        [bezier8Path addCurveToPoint: CGPointMake(95.54, 50.83) controlPoint1: CGPointMake(95.52, 50.77) controlPoint2: CGPointMake(95.53, 50.8)];
        [bezier8Path addCurveToPoint: CGPointMake(95.55, 50.83) controlPoint1: CGPointMake(95.54, 50.83) controlPoint2: CGPointMake(95.55, 50.83)];
        [bezier8Path addCurveToPoint: CGPointMake(97.81, 52.21) controlPoint1: CGPointMake(95.98, 51.64) controlPoint2: CGPointMake(96.83, 52.21)];
        [bezier8Path addCurveToPoint: CGPointMake(100.37, 49.65) controlPoint1: CGPointMake(99.22, 52.21) controlPoint2: CGPointMake(100.37, 51.06)];
        [bezier8Path addCurveToPoint: CGPointMake(100.28, 49.01) controlPoint1: CGPointMake(100.37, 49.43) controlPoint2: CGPointMake(100.33, 49.21)];
        [bezier8Path addCurveToPoint: CGPointMake(100.28, 48.91) controlPoint1: CGPointMake(100.29, 48.97) controlPoint2: CGPointMake(100.29, 48.94)];
        [bezier8Path addCurveToPoint: CGPointMake(102.41, 34.18) controlPoint1: CGPointMake(98.36, 44.41) controlPoint2: CGPointMake(100.18, 39.48)];
        [bezier8Path addCurveToPoint: CGPointMake(104.56, 15.6) controlPoint1: CGPointMake(104.82, 28.44) controlPoint2: CGPointMake(107.4, 22.07)];
        [bezier8Path addCurveToPoint: CGPointMake(102.23, 14) controlPoint1: CGPointMake(104.19, 14.66) controlPoint2: CGPointMake(103.3, 14)];
        [bezier8Path addCurveToPoint: CGPointMake(99.74, 16.5) controlPoint1: CGPointMake(100.86, 14) controlPoint2: CGPointMake(99.74, 15.12)];
        [bezier8Path addCurveToPoint: CGPointMake(99.9, 17.36) controlPoint1: CGPointMake(99.74, 16.8) controlPoint2: CGPointMake(99.8, 17.09)];
        [bezier8Path addCurveToPoint: CGPointMake(99.9, 17.39) controlPoint1: CGPointMake(99.9, 17.37) controlPoint2: CGPointMake(99.9, 17.38)];
        [bezier8Path addCurveToPoint: CGPointMake(99.92, 17.43) controlPoint1: CGPointMake(99.91, 17.4) controlPoint2: CGPointMake(99.91, 17.42)];
        [bezier8Path addCurveToPoint: CGPointMake(99.94, 17.49) controlPoint1: CGPointMake(99.92, 17.45) controlPoint2: CGPointMake(99.93, 17.47)];
        [bezier8Path addCurveToPoint: CGPointMake(97.76, 32.23) controlPoint1: CGPointMake(102, 22.12) controlPoint2: CGPointMake(100.01, 26.87)];
        [bezier8Path addCurveToPoint: CGPointMake(95.41, 50.53) controlPoint1: CGPointMake(95.39, 37.88) controlPoint2: CGPointMake(92.76, 44.14)];
        [bezier8Path addCurveToPoint: CGPointMake(95.5, 50.74) controlPoint1: CGPointMake(95.44, 50.6) controlPoint2: CGPointMake(95.47, 50.66)];
        [bezier8Path closePath];
        bezier8Path.miterLimit = 4;

        [MyStyleKit.customGreen setFill];
        [bezier8Path fill];
    }
}

+ (void)drawLocationIcon
{

    //// miu
    {
        //// map_location_pin_map-marker_glyph Drawing
        UIBezierPath* map_location_pin_mapmarker_glyphPath = UIBezierPath.bezierPath;
        [map_location_pin_mapmarker_glyphPath moveToPoint: CGPointMake(17.5, 31)];
        [map_location_pin_mapmarker_glyphPath addCurveToPoint: CGPointMake(27, 12.94) controlPoint1: CGPointMake(17.5, 31) controlPoint2: CGPointMake(27, 18.44)];
        [map_location_pin_mapmarker_glyphPath addCurveToPoint: CGPointMake(17.5, 3) controlPoint1: CGPointMake(27, 7.45) controlPoint2: CGPointMake(23.86, 3)];
        [map_location_pin_mapmarker_glyphPath addCurveToPoint: CGPointMake(8, 12.94) controlPoint1: CGPointMake(11.14, 3) controlPoint2: CGPointMake(8, 7.45)];
        [map_location_pin_mapmarker_glyphPath addCurveToPoint: CGPointMake(17.5, 31) controlPoint1: CGPointMake(8, 18.44) controlPoint2: CGPointMake(17.5, 31)];
        [map_location_pin_mapmarker_glyphPath addLineToPoint: CGPointMake(17.5, 31)];
        [map_location_pin_mapmarker_glyphPath closePath];
        [map_location_pin_mapmarker_glyphPath moveToPoint: CGPointMake(17.5, 16.36)];
        [map_location_pin_mapmarker_glyphPath addCurveToPoint: CGPointMake(22.57, 11.27) controlPoint1: CGPointMake(20.3, 16.36) controlPoint2: CGPointMake(22.57, 14.08)];
        [map_location_pin_mapmarker_glyphPath addCurveToPoint: CGPointMake(17.5, 6.18) controlPoint1: CGPointMake(22.57, 8.46) controlPoint2: CGPointMake(20.3, 6.18)];
        [map_location_pin_mapmarker_glyphPath addCurveToPoint: CGPointMake(12.43, 11.27) controlPoint1: CGPointMake(14.7, 6.18) controlPoint2: CGPointMake(12.43, 8.46)];
        [map_location_pin_mapmarker_glyphPath addCurveToPoint: CGPointMake(17.5, 16.36) controlPoint1: CGPointMake(12.43, 14.08) controlPoint2: CGPointMake(14.7, 16.36)];
        [map_location_pin_mapmarker_glyphPath addLineToPoint: CGPointMake(17.5, 16.36)];
        [map_location_pin_mapmarker_glyphPath closePath];
        map_location_pin_mapmarker_glyphPath.miterLimit = 4;

        map_location_pin_mapmarker_glyphPath.usesEvenOddFillRule = YES;

        [MyStyleKit.customGreen setFill];
        [map_location_pin_mapmarker_glyphPath fill];
    }
}

+ (void)drawPencil
{

    //// miu
    {
        //// editor_pencil_pen_edit_write_glyph Drawing
        UIBezierPath* editor_pencil_pen_edit_write_glyphPath = UIBezierPath.bezierPath;
        [editor_pencil_pen_edit_write_glyphPath moveToPoint: CGPointMake(7.47, 20.92)];
        [editor_pencil_pen_edit_write_glyphPath addLineToPoint: CGPointMake(13.12, 26.58)];
        [editor_pencil_pen_edit_write_glyphPath addLineToPoint: CGPointMake(26.03, 13.66)];
        [editor_pencil_pen_edit_write_glyphPath addLineToPoint: CGPointMake(20.38, 8.01)];
        [editor_pencil_pen_edit_write_glyphPath addLineToPoint: CGPointMake(7.47, 20.92)];
        [editor_pencil_pen_edit_write_glyphPath closePath];
        [editor_pencil_pen_edit_write_glyphPath moveToPoint: CGPointMake(23.64, 4.75)];
        [editor_pencil_pen_edit_write_glyphPath addLineToPoint: CGPointMake(21.25, 7.14)];
        [editor_pencil_pen_edit_write_glyphPath addLineToPoint: CGPointMake(26.9, 12.79)];
        [editor_pencil_pen_edit_write_glyphPath addLineToPoint: CGPointMake(29.29, 10.4)];
        [editor_pencil_pen_edit_write_glyphPath addCurveToPoint: CGPointMake(29.29, 8.79) controlPoint1: CGPointMake(30.1, 9.59) controlPoint2: CGPointMake(29.29, 8.79)];
        [editor_pencil_pen_edit_write_glyphPath addLineToPoint: CGPointMake(25.26, 4.75)];
        [editor_pencil_pen_edit_write_glyphPath addCurveToPoint: CGPointMake(23.64, 4.75) controlPoint1: CGPointMake(25.26, 4.75) controlPoint2: CGPointMake(24.45, 3.94)];
        [editor_pencil_pen_edit_write_glyphPath closePath];
        [editor_pencil_pen_edit_write_glyphPath moveToPoint: CGPointMake(6.67, 21.69)];
        [editor_pencil_pen_edit_write_glyphPath addLineToPoint: CGPointMake(5.48, 28.56)];
        [editor_pencil_pen_edit_write_glyphPath addLineToPoint: CGPointMake(12.33, 27.36)];
        [editor_pencil_pen_edit_write_glyphPath addLineToPoint: CGPointMake(6.67, 21.69)];
        [editor_pencil_pen_edit_write_glyphPath closePath];
        editor_pencil_pen_edit_write_glyphPath.miterLimit = 4;

        editor_pencil_pen_edit_write_glyphPath.usesEvenOddFillRule = YES;

        [MyStyleKit.customGreen setFill];
        [editor_pencil_pen_edit_write_glyphPath fill];
    }
}

#pragma mark Generated Images

+ (UIImage*)imageOfChatIcon
{
    if (_imageOfChatIcon)
        return _imageOfChatIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(202, 195), NO, 0.0f);
    [MyStyleKit drawChatIcon];

    _imageOfChatIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfChatIcon;
}

+ (UIImage*)imageOfPaperPlane
{
    if (_imageOfPaperPlane)
        return _imageOfPaperPlane;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(202, 195), NO, 0.0f);
    [MyStyleKit drawPaperPlane];

    _imageOfPaperPlane = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfPaperPlane;
}

+ (UIImage*)imageOfMail
{
    if (_imageOfMail)
        return _imageOfMail;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(202, 195), NO, 0.0f);
    [MyStyleKit drawMail];

    _imageOfMail = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfMail;
}

+ (UIImage*)imageOfDeleteBin
{
    if (_imageOfDeleteBin)
        return _imageOfDeleteBin;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(202, 195), NO, 0.0f);
    [MyStyleKit drawDeleteBin];

    _imageOfDeleteBin = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfDeleteBin;
}

+ (UIImage*)imageOfLocationIcon
{
    if (_imageOfLocationIcon)
        return _imageOfLocationIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(34, 34), NO, 0.0f);
    [MyStyleKit drawLocationIcon];

    _imageOfLocationIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysOriginal];
    UIGraphicsEndImageContext();

    return _imageOfLocationIcon;
}

+ (UIImage*)imageOfPencil
{
    if (_imageOfPencil)
        return _imageOfPencil;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(34, 34), NO, 0.0f);
    [MyStyleKit drawPencil];

    _imageOfPencil = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysOriginal];
    UIGraphicsEndImageContext();

    return _imageOfPencil;
}

#pragma mark Customization Infrastructure

- (void)setChatIconTargets: (NSArray*)chatIconTargets
{
    _chatIconTargets = chatIconTargets;

    for (id target in self.chatIconTargets)
        [target setImage: MyStyleKit.imageOfChatIcon];
}

- (void)setPaperPlaneTargets: (NSArray*)paperPlaneTargets
{
    _paperPlaneTargets = paperPlaneTargets;

    for (id target in self.paperPlaneTargets)
        [target setImage: MyStyleKit.imageOfPaperPlane];
}

- (void)setMailTargets: (NSArray*)mailTargets
{
    _mailTargets = mailTargets;

    for (id target in self.mailTargets)
        [target setImage: MyStyleKit.imageOfMail];
}

- (void)setDeleteBinTargets: (NSArray*)deleteBinTargets
{
    _deleteBinTargets = deleteBinTargets;

    for (id target in self.deleteBinTargets)
        [target setImage: MyStyleKit.imageOfDeleteBin];
}

- (void)setLocationIconTargets: (NSArray*)locationIconTargets
{
    _locationIconTargets = locationIconTargets;

    for (id target in self.locationIconTargets)
        [target setImage: MyStyleKit.imageOfLocationIcon];
}

- (void)setPencilTargets: (NSArray*)pencilTargets
{
    _pencilTargets = pencilTargets;

    for (id target in self.pencilTargets)
        [target setImage: MyStyleKit.imageOfPencil];
}


@end
